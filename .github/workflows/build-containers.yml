name: Build and push container images

on:
  push:
  pull_request:
  workflow_dispatch:
  repository_dispatch:
    types: [dispatch-build]

jobs:
  make-date-tag:
    runs-on: ubuntu-latest
    outputs:
      dtag: ${{ steps.mkdatetag.outputs.dtag }}
    steps:
      - uses: actions/checkout@v3
      - name: make date tag
        id: mkdatetag
        run: echo "dtag=$(date +%Y%m%d-%H%M)" >> $GITHUB_OUTPUT

  build-image-list:
    runs-on: ubuntu-latest
    outputs:
      images: ${{ steps.image-list.outputs.images }}
    steps:
      - uses: actions/checkout@v3
      - name: Generate Image List
        id: image-list
        run: |
          ORG_DIR=opensciencegrid
          if [[ $GITHUB_EVENT_NAME == 'pull_request' ]] ||
             [[ $GITHUB_EVENT_NAME == 'push' ]]; then
               if [[ $GITHUB_EVENT_NAME == 'pull_request' ]]; then
                   BASE=$(git merge-base origin/$GITHUB_BASE_REF HEAD)
               elif [[ $GITHUB_REF == 'refs/heads/main' ]]; then
                   BASE=${{github.event.before}}
               else
                   BASE=origin/main
               fi
               images=$(git diff --name-only "$BASE" "$GITHUB_SHA" |
                        egrep "^$ORG_DIR/" |
                        cut -d/ -f -2 |
                        sort |
                        uniq |
                        xargs -I {} find . -type d -wholename ./{} -printf "%P\n")
          else
               images=$(find $ORG_DIR -mindepth 1 -maxdepth 1 -type d -printf "$ORG_DIR/%P\n")
          fi
          image_json=$(echo -n "${images:-dummy}" | jq -Rcs '.|split("\n") | map(select(. != ""))')
          echo "images=$image_json" >> $GITHUB_OUTPUT
          echo "::set-output name=images::$image_json"

  generate-build-matrix:
    runs-on: ubuntu-latest
    needs: build-image-list
    outputs:
      matrix: ${{ steps.run-python-script.outputs.matrix }}
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'
      - name: Run build-job-matrix script
        run: |
          python scripts/build-job-matrix.py ${{ needs.build-image-list.outputs.images }} > matrix.json
          echo "::set-output name=matrix::$(cat matrix.json)"
          cat matrix.json

  build:
    runs-on: ubuntu-latest
    needs: [generate-build-matrix, make-date-tag]
    if: needs.generate-build-matrix.outputs.matrix != '["dummy"]'
    strategy:
      fail-fast: false
      matrix: ${{fromJson(needs.generate-build-matrix.outputs.matrix)}}
    steps:
      - uses: actions/checkout@v3
      - name: Build ${{ matrix.name }}:${{ matrix.osg_series }}-${{ matrix.base_repo }}
        continue-on-error: ${{ matrix.base_repo == 'development' }}
        uses: opensciencegrid/build-container-action@v0.6.0
        with:
          osg_series: ${{ matrix.osg_series }}
          osg_repo: ${{ matrix.base_repo }}
          context: ${{ matrix.name }}
          base_os: ${{ matrix.base_os }}

  push:
    runs-on: ubuntu-latest
    if: >-
      github.ref == 'refs/heads/main' &&
      github.event_name != 'pull_request' &&
      github.repository_owner == 'opensciencegrid' &&
      needs.generate-build-matrix.outputs.matrix != '["dummy"]'
    needs: [build, make-date-tag]
    strategy:
      fail-fast: false
      matrix: ${{fromJson(needs.generate-build-matrix.outputs.matrix)}}
    steps:
      - uses: actions/checkout@v3
      - name: Push to Harbor and Docker Hub
        run: |
          echo "Pushing ${matrix.name} images to repositories"
          # Use appropriate actions or commands for pushing images here

      - name: Push to Harbor (${matrix.series.name}-development)
        if: matrix.series.name != '23'
        uses: opensciencegrid/push-container-action@main
        with:
          repo: development
          osg_series: ${{ matrix.series.name }}
          context: ${{ matrix.image }}
          base_os: ${{ matrix.series.os }}
          registry_url: hub.opensciencegrid.org
          registry_user: ${{ secrets.OSG_HARBOR_ROBOT_USER }}
          registry_pass: ${{ secrets.OSG_HARBOR_ROBOT_PASSWORD }}

      - name: Push to Harbor (${matrix.series.name}-testing)
        if: always()
        uses: opensciencegrid/push-container-action@main
        with:
          repo: testing
          osg_series: ${{ matrix.series.name }}
          context: ${{ matrix.image }}
          base_os: ${{ matrix.series.os }}
          registry_url: hub.opensciencegrid.org
          registry_user: ${{ secrets.OSG_HARBOR_ROBOT_USER }}
          registry_pass: ${{ secrets.OSG_HARBOR_ROBOT_PASSWORD }}

      - name: Push to Harbor (${matrix.series.name}-release)
        if: always()
        uses: opensciencegrid/push-container-action@main
        with:
          repo: release
          osg_series: ${{ matrix.series.name }}
          context: ${{ matrix.image }}
          base_os: ${{ matrix.series.os }}
          registry_url: hub.opensciencegrid.org
          registry_user: ${{ secrets.OSG_HARBOR_ROBOT_USER }}
          registry_pass: ${{ secrets.OSG_HARBOR_ROBOT_PASSWORD }}

      - name: Push to Docker Hub (${matrix.series.name}-development)
        if: always()
        uses: opensciencegrid/push-container-action@main
        with:
          repo: development
          osg_series: ${{ matrix.series.name }}
          context: ${{ matrix.image }}
          base_os: ${{ matrix.series.os }}
          registry_url: docker.io
          registry_user: ${{ secrets.DOCKER_USERNAME }}
          registry_pass: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push to Docker Hub (${matrix.series.name}-testing)
        if: always()
        uses: opensciencegrid/push-container-action@main
        with:
          repo: testing
          osg_series: ${{ matrix.series.name }}
          context: ${{ matrix.image }}
          base_os: ${{ matrix.series.os }}
          registry_url: docker.io
          registry_user: ${{ secrets.DOCKER_USERNAME }}
          registry_pass: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push to Docker Hub (${matrix.series.name}-release)
        if: always()
        uses: opensciencegrid/push-container-action@main
        with:
          repo: release
          osg_series: ${{ matrix.series.name }}
          context: ${{ matrix.image }}
          base_os: ${{ matrix.series.os }}
          registry_url: docker.io
          registry_user: ${{ secrets.DOCKER_USERNAME }}
          registry_pass: ${{ secrets.DOCKER_PASSWORD }}