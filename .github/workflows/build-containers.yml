name: Build and push container images

on:
  push:
  pull_request:
  workflow_dispatch:
  repository_dispatch:
    types: [dispatch-build]

jobs:
  make-date-tag:
    runs-on: ubuntu-latest
    outputs:
      dtag: ${{ steps.mkdatetag.outputs.dtag }}
    steps:
      - name: make date tag
        id: mkdatetag
        run: echo "dtag=$(date +%Y%m%d-%H%M)" >> $GITHUB_OUTPUT

  build-image-list:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set_matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - id: image-list
        run: |
            ORG_DIR=opensciencegrid
            if [[ $GITHUB_EVENT_NAME == 'pull_request' ]] ||
               [[ $GITHUB_EVENT_NAME == 'push' ]]; then
                 if [[ $GITHUB_EVENT_NAME == 'pull_request' ]]; then
                     BASE=$(git merge-base origin/$GITHUB_BASE_REF HEAD)
                 elif [[ $GITHUB_REF == 'refs/heads/main' ]]; then
                     BASE=${{github.event.before}}
                 else
                     BASE=origin/main
                 fi
                 images=$(git diff --name-only \
                                   "$BASE" \
                                   "$GITHUB_SHA" |
                          egrep "^$ORG_DIR/" |
                          cut -d/ -f -2 |
                          sort |
                          uniq |
                          xargs -I {} find . -type d \
                                             -wholename ./{} \
                                             -printf "%P\n")
            else
                 images=$(find $ORG_DIR -mindepth 1 \
                                        -maxdepth 1 \
                                        -type d \
                                        -printf "$ORG_DIR/%P\n")
            fi

            image_json=$(echo -n "${images:-dummy}" | jq -Rcs '.|split("\n") | map(select(. != ""))')
            echo "$image_json" > image_list.json
            echo "images=$(echo $images | tr '\n' ' ')" >> $GITHUB_OUTPUT

      - name: Display image list
        run: cat image_list.json

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Run build-job-matrix script
        id: run-python-script
        run: python scripts/build-job-matrix.py ${{ steps.image-list.outputs.images }}

      - name: Read JSON and set as output
        id: set_matrix
        run: |
          json_content=$(cat scripts/grouped_output.json)
          echo "::set-output name=matrix::$(echo $json_content | jq -c '.include')"

      - name: Verify scripts/output.json
        run: |
          echo "Content of scripts/grouped_output.json:"
          cat scripts/grouped_output.json

  build:
    runs-on: ubuntu-latest
    needs: build-image-list
    strategy:
      fail-fast: false
      matrix:
        include: ${{ fromJson(needs.build-image-list.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v3

      - name: Print raw matrix configuration
        run: |
          echo "Raw matrix configuration: ${{ matrix }}"

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Print and set configuration
        run: |
          echo "Building ${{ matrix.name }} with configuration ${{ matrix.config }}"
          CONFIG="${{ matrix.config }}"
          BASE_OS=$(echo $CONFIG | awk -F'-' '{print $1}')
          OSG_SERIES=$(echo $CONFIG | awk -F'-' '{print $2}')
          BASE_REPO=$(echo $CONFIG | awk -F'-' '{print $3}')
          STANDARD_BUILD=$(echo $CONFIG | awk -F'-' '{print $4}')
          REPO_BUILD=$(echo $CONFIG | awk -F'-' '{print $5}')
          echo "BASE_OS: $BASE_OS"
          echo "OSG_SERIES: $OSG_SERIES"
          echo "BASE_REPO: $BASE_REPO"
          echo "STANDARD_BUILD: $STANDARD_BUILD"
          echo "REPO_BUILD: $REPO_BUILD"
          echo "export BASE_OS=$BASE_OS" >> $GITHUB_ENV
          echo "export OSG_SERIES=$OSG_SERIES" >> $GITHUB_ENV
          echo "export BASE_REPO=$BASE_REPO" >> $GITHUB_ENV
          echo "export STANDARD_BUILD=$STANDARD_BUILD" >> $GITHUB_ENV
          echo "export REPO_BUILD=$REPO_BUILD" >> $GITHUB_ENV

      - name: Validate environment variables
        run: |
          echo "Validating environment variables:"
          echo "BASE_OS: $BASE_OS"
          echo "OSG_SERIES: $OSG_SERIES"
          echo "BASE_REPO: $BASE_REPO"
          if [ -z "$BASE_OS" ] || [ -z "$OSG_SERIES" ] || [ -z "$BASE_REPO" ]; then
            echo "Error: One or more environment variables are not set."
            exit 1
          fi

      - name: Build Image
        run: |
          DEFAULT_TAG=$(echo s3-backup-${OSG_SERIES}-${BASE_REPO}-${GITHUB_RUN_NUMBER} | tr '[:upper:]' '[:lower:]' | tr -cd '[:alnum:]-')
          docker build --build-arg BASE_OS=$BASE_OS \
                       --build-arg BASE_OSG_SERIES=$OSG_SERIES \
                       --build-arg BASE_REPO=$BASE_REPO \
                       --tag $DEFAULT_TAG \
                       --file opensciencegrid/${{ matrix.name }}/Dockerfile \
                       opensciencegrid/${{ matrix.name }}

  push:
    runs-on: ubuntu-latest
    if: >-
      github.ref == 'refs/heads/main' &&
      github.event_name != 'pull_request' &&
      github.repository_owner == 'opensciencegrid'
    needs: [make-date-tag, build]
    strategy:
      fail-fast: false
      matrix:
        include: ${{ fromJson(needs.build.outputs.matrix) }}
    steps:
      - name: Push to Harbor (${{ matrix.osg_series }}-development)
        if: matrix.osg_series != '23'
        uses: opensciencegrid/push-container-action@main
        with:
          repo: development
          osg_series: ${{ matrix.osg_series }}
          context: opensciencegrid/${{ matrix.name }}
          base_os: ${{ matrix.base_os }}
          registry_url: hub.opensciencegrid.org
          registry_user: ${{ secrets.OSG_HARBOR_ROBOT_USER }}
          registry_pass: ${{ secrets.OSG_HARBOR_ROBOT_PASSWORD }}

      - name: Push to Harbor (${{ matrix.osg_series }}-testing)
        if: always()
        uses: opensciencegrid/push-container-action@main
        with:
          repo: testing
          osg_series: ${{ matrix.osg_series }}
          context: opensciencegrid/${{ matrix.name }}
          base_os: ${{ matrix.base_os }}
          registry_url: hub.opensciencegrid.org
          registry_user: ${{ secrets.OSG_HARBOR_ROBOT_USER }}
          registry_pass: ${{ secrets.OSG_HARBOR_ROBOT_PASSWORD }}

      - name: Push to Harbor (${{ matrix.osg_series }}-release)
        if: always()
        uses: opensciencegrid/push-container-action@main
        with:
          repo: release
          osg_series: ${{ matrix.osg_series }}
          context: opensciencegrid/${{ matrix.name }}
          base_os: ${{ matrix.base_os }}
          registry_url: hub.opensciencegrid.org
          registry_user: ${{ secrets.OSG_HARBOR_ROBOT_USER }}
          registry_pass: ${{ secrets.OSG_HARBOR_ROBOT_PASSWORD }}

      - name: Push to Docker Hub (${{ matrix.osg_series }}-development)
        if: always()
        uses: opensciencegrid/push-container-action@main
        with:
          repo: development
          osg_series: ${{ matrix.osg_series }}
          context: opensciencegrid/${{ matrix.name }}
          base_os: ${{ matrix.base_os }}
          registry_url: docker.io
          registry_user: ${{ secrets.DOCKER_USERNAME }}
          registry_pass: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push to Docker Hub (${{ matrix.osg_series }}-testing)
        if: always()
        uses: opensciencegrid/push-container-action@main
        with:
          repo: testing
          osg_series: ${{ matrix.osg_series }}
          context: opensciencegrid/${{ matrix.name }}
          base_os: ${{ matrix.base_os }}
          registry_url: docker.io
          registry_user: ${{ secrets.DOCKER_USERNAME }}
          registry_pass: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push to Docker Hub (${{ matrix.osg_series }}-release)
        if: always()
        uses: opensciencegrid/push-container-action@main
        with:
          repo: release
          osg_series: ${{ matrix.osg_series }}
          context: opensciencegrid/${{ matrix.name }}
          base_os: ${{ matrix.base_os }}
          registry_url: docker.io
          registry_user: ${{ secrets.DOCKER_USERNAME }}
          registry_pass: ${{ secrets.DOCKER_PASSWORD }}