---
name: Build and push container images

on:
  push:
  pull_request:
  workflow_dispatch:
  repository_dispatch:
    types: [dispatch-build]

jobs:
  make-date-tag:
    runs-on: ubuntu-latest
    outputs:
      dtag: ${{ steps.mkdatetag.outputs.dtag }}
    steps:
      - name: make date tag
        id: mkdatetag
        run: echo "dtag=$(date +%Y%m%d-%H%M)" >> $GITHUB_OUTPUT

  build-image-list:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
      image_list: ${{ steps.image-list.outputs.image_list }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'
          cache: 'pip' # caching pip dependencies
      - run: pip install -r requirements.txt

      - id: image-list
        run: python3 scripts/detect-changed-images.py --before ${{github.event.before}}

      - name: Display image list
        run: cat image_list.json

      - name: Set matrix output
        id: set-matrix
        run: python3 scripts/build-job-matrix.py ${{ steps.image-list.outputs.images }}
        
      - name: Verify matrix content
        run: |
          echo "Content of matrix:"
          echo "${{ steps.set-matrix.outputs.matrix }}"

  build-push-image:
    runs-on: ubuntu-latest
    needs: build-image-list
    if: ${{ needs.build-image-list.outputs.image_list != '["dummy"]' }}
    # Prevent a single build failure from killing the workflow.
    # This is safe since subsequent pushes should fail on cache load
    continue-on-error: true
    strategy:
      fail-fast: false
      matrix:
        include: ${{ fromJson(needs.build-image-list.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v3
      - name: Print raw matrix configuration
        run: |
          echo "Raw matrix configuration: ${{ matrix }}"

      - name: Validate Build Matrix
        run: |
          echo "Validating environment variables:"
          if [ -z "${{ matrix.base_os }}" ] || [ -z "${{ matrix.osg_series }}" ] || [ -z "${{ matrix.base_repo }}" ] || [ -z "${{ matrix.context }}" ]; then
            echo "Error: One or more build matrix variables are not set."
            exit 1
          else
            echo "All required build matrix variables are set."
          fi

      - name: Set Image Name
        run: |
          BASE_OS=${{ matrix.base_os }}
          OSG_SERIES=${{ matrix.osg_series }}
          BASE_REPO=${{ matrix.base_repo }}
          ORGANIZATION=$(echo ${{ matrix.context }} | cut -d'/' -f1)

          if [ -n "${{ matrix.tag_override }}" ] ; then
            echo "IMAGE_NAME=${ORGANIZATION}/${{ matrix.name }}:${{ matrix.tag_override }}" >> $GITHUB_ENV
          else
            echo "IMAGE_NAME=${ORGANIZATION}/${{ matrix.name }}:${OSG_SERIES}-${BASE_REPO}" >> $GITHUB_ENV
          fi

      - name: Pull External Repo
        if: ${{ matrix.upstream }}
        run: |
          mkdir -p ${{ matrix.context }}
          git clone ${{ matrix.upstream }} ${{ matrix.context }}
          (cd ${{matrix.context}} && git fetch && git reset --hard ${{ matrix.upstream_ref }})
          
          
      - name: Build Image
        continue-on-error: ${{ matrix.yum_repo == 'development' }}
        uses: opensciencegrid/build-container-action@v0.7.1
        with:
          clean_before_build: false
          osg_series: ${{ matrix.osg_series }}
          osg_repo: ${{ matrix.base_repo }}
          context: ${{ matrix.context }}
          base_os: ${{ matrix.base_os }}
          output_image: ${{ env.IMAGE_NAME }}
          
      - name: Push to Harbor (${OSG_SERIES}-${BASE_REPO})
        if: >-
          github.ref == 'refs/heads/main' &&
          github.event_name != 'pull_request' &&
          needs.build-image-list.outputs.image_list != '["dummy"]'
        #github.repository_owner == 'opensciencegrid' &&
        uses: opensciencegrid/build-container-action@v0.7.1
        with:
          clean_before_build: false
          push_image: true
          osg_series: ${{ matrix.osg_series }}
          osg_repo: ${{ matrix.base_repo }}
          context: ${{ matrix.context }}
          base_os: ${{ matrix.base_os }}
          output_image: ${{ env.IMAGE_NAME }}
          registry_url: hub.opensciencegrid.org
          registry_user: ${{ secrets.OSG_HARBOR_ROBOT_USER }}
          registry_pass: ${{ secrets.OSG_HARBOR_ROBOT_PASSWORD }}
        
      - name: Push to Docker Hub (${OSG_SERIES}-${BASE_REPO})
        if: >-
          startsWith(env.IMAGE_NAME, 'opensciencegrid') &&
          github.ref == 'refs/heads/main' &&
          github.event_name != 'pull_request' &&
          needs.build-image-list.outputs.image_list != '["dummy"]' 
        #github.repository_owner == 'opensciencegrid' &&
        uses: opensciencegrid/build-container-action@v0.7.1
        with:
          clean_before_build: false
          push_image: true
          osg_series: ${{ matrix.osg_series }}
          osg_repo: ${{ matrix.base_repo }}
          context: ${{ matrix.context }}
          base_os: ${{ matrix.base_os }}
          output_image: ${{ env.IMAGE_NAME }}
          registry_url: docker.io
          registry_user: ${{ secrets.DOCKER_USERNAME }}
          registry_pass: ${{ secrets.DOCKER_PASSWORD }}
