name: Build and push container images

on:
  push:
  pull_request:
  workflow_dispatch:
  repository_dispatch:
    types: [dispatch-build]

jobs:
  make-date-tag:
    runs-on: ubuntu-latest
    outputs:
      dtag: ${{ steps.mkdatetag.outputs.dtag }}
    steps:
      - name: make date tag
        id: mkdatetag
        run: echo "dtag=$(date +%Y%m%d-%H%M)" >> $GITHUB_OUTPUT

  build-image-list:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - id: image-list
        run: |
            ORG_DIR=opensciencegrid
            # Get the list of files changed based on the type of event
            # kicking off the GHA:
            # 1. For the main branch, diff the previous state of main vs
            #    the current commit
            # 2. For other branches (i.e., on someone's fork), diff main
            #    vs the current commit
            # 3. For PRs, diff the base ref vs the current commit
            # 4. For everything else (e.g., dispatches), build all images
            if [[ $GITHUB_EVENT_NAME == 'pull_request' ]] ||
               [[ $GITHUB_EVENT_NAME == 'push' ]]; then
                 if [[ $GITHUB_EVENT_NAME == 'pull_request' ]]; then
                     BASE=$(git merge-base origin/$GITHUB_BASE_REF HEAD)
                 elif [[ $GITHUB_REF == 'refs/heads/main' ]]; then
                     BASE=${{github.event.before}}
                 else
                     BASE=origin/main
                 fi
                 # List image root dirs where files have changed and the
                 # root dir exists. Example value:
                 # "opensciencegrid/vo-frontend opensciencegrid/ospool-cm"
                 images=$(git diff --name-only \
                                   "$BASE" \
                                   "$GITHUB_SHA" |
                          egrep "^$ORG_DIR/" |
                          cut -d/ -f -2 |
                          sort |
                          uniq |
                          xargs -I {} find . -type d \
                                             -wholename ./{} \
                                             -printf "%P\n")
            else
                 # List all image root dirs. Example value:
                 # "opensciencegrid/vo-frontend opensciencegrid/ospool-cm"
                 images=$(find $ORG_DIR -mindepth 1 \
                                        -maxdepth 1 \
                                        -type d \
                                        -printf "$ORG_DIR/%P\n")
            fi

            image_json=$(echo -n "${images:-dummy}" | jq -Rcs '.|split("\n") | map(select(. != ""))')
            echo "$image_json" > image_list.json
            echo "images=$(echo $images | tr '\n' ' ')" >> $GITHUB_OUTPUT

      - name: Display image list
        run: cat image_list.json

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Run build-job-matrix script
        id: run-python-script
        run: |
          python scripts/build-job-matrix.py ${{ steps.image-list.outputs.images }}
          matrix=$(cat scripts/output.json)
          echo "matrix=$matrix" >> $GITHUB_ENV  # ensure no newline characters are causing issues
  
      - name: Set matrix output
        run: echo "::set-output name=matrix::$(echo $matrix | jq -c .)"

      - name: Verify scripts/output.json
        run: |
          echo "Content of scripts/output.json:"
          cat scripts/output.json
  
      

      - name: Print matrix output
        run: |
          echo "Matrix output: ${{ steps.set-matrix.outputs.matrix }}"
  

  build:
    runs-on: ubuntu-latest
    needs: build-image-list
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.build-image-list.outputs.matrix) }}
    steps:
      - name: Print matrix output
        run: |
          echo "Matrix output: ${{ toJson(matrix) }}"
      - name: Build ${{ matrix.name }}:${{ matrix.osg_series }}-${{ matrix.base_repo }}
        uses: opensciencegrid/build-container-action@v0.6.0
        with:
          osg_series: ${{ matrix.osg_series }}
          osg_repo: ${{ matrix.base_repo }}
          context: ${{ matrix.name }}
          base_os: ${{ matrix.base_os }}
      

  push:
    runs-on: ubuntu-latest
    if: >-
      github.ref == 'refs/heads/main' &&
      github.event_name != 'pull_request' &&
      github.repository_owner == 'opensciencegrid'
    needs: [make-date-tag, build-image-list, build]
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.build-image-list.outputs.matrix) }}
    steps:
      - name: Push to Harbor (${{ matrix.osg_series }}-development)
        if: matrix.osg_series != '23'
        uses: opensciencegrid/push-container-action@main
        with:
          repo: development
          osg_series: ${{ matrix.osg_series }}
          context: ${{ matrix.name }}
          base_os: ${{ matrix.base_os }}
          registry_url: hub.opensciencegrid.org
          registry_user: ${{ secrets.OSG_HARBOR_ROBOT_USER }}
          registry_pass: ${{ secrets.OSG_HARBOR_ROBOT_PASSWORD }}

      - name: Push to Harbor (${{ matrix.osg_series }}-testing)
        if: always()
        uses: opensciencegrid/push-container-action@main
        with:
          repo: testing
          osg_series: ${{ matrix.osg_series }}
          context: ${{ matrix.name }}
          base_os: ${{ matrix.base_os }}
          registry_url: hub.opensciencegrid.org
          registry_user: ${{ secrets.OSG_HARBOR_ROBOT_USER }}
          registry_pass: ${{ secrets.OSG_HARBOR_ROBOT_PASSWORD }}

      - name: Push to Harbor (${{ matrix.osg_series }}-release)
        if: always()
        uses: opensciencegrid/push-container-action@main
        with:
          repo: release
          osg_series: ${{ matrix.osg_series }}
          context: ${{ matrix.name }}
          base_os: ${{ matrix.base_os }}
          registry_url: hub.opensciencegrid.org
          registry_user: ${{ secrets.OSG_HARBOR_ROBOT_USER }}
          registry_pass: ${{ secrets.OSG_HARBOR_ROBOT_PASSWORD }}

      - name: Push to Docker Hub (${{ matrix.osg_series }}-development)
        if: always()
        uses: opensciencegrid/push-container-action@main
        with:
          repo: development
          osg_series: ${{ matrix.osg_series }}
          context: ${{ matrix.name }}
          base_os: ${{ matrix.base_os }}
          registry_url: docker.io
          registry_user: ${{ secrets.DOCKER_USERNAME }}
          registry_pass: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push to Docker Hub (${{ matrix.osg_series }}-testing)
        if: always()
        uses: opensciencegrid/push-container-action@main
        with:
          repo: testing
          osg_series: ${{ matrix.osg_series }}
          context: ${{ matrix.name }}
          base_os: ${{ matrix.base_os }}
          registry_url: docker.io
          registry_user: ${{ secrets.DOCKER_USERNAME }}
          registry_pass: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push to Docker Hub (${{ matrix.osg_series }}-release)
        if: always()
        uses: opensciencegrid/push-container-action@main
        with:
          repo: release
          osg_series: ${{ matrix.osg_series }}
          context: ${{ matrix.name }}
          base_os: ${{ matrix.base_os }}
          registry_url: docker.io
          registry_user: ${{ secrets.DOCKER_USERNAME }}
          registry_pass: ${{ secrets.DOCKER_PASSWORD }}